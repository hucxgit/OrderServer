<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
     http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
     http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.0.xsd">




    <bean id="basePropertys" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="validationQuery" value="select 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${jdbc.logAbandoned}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
    </bean>

    <!-- user database read-->
    <bean id="userDataSoureRead" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton"
          parent="basePropertys">
        <property name="url"
                  value="${jdbc.house.url.read}"/>
        <property name="username" value="${jdbc.house.username}"/>
        <property name="password" value="${jdbc.house.password}"/>
    </bean>



    <bean id="userReadSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="userDataSoureRead"/>
        <property name="configLocation" value="classpath:mybatis/sqlmap-config.xml"/>
        <property name="mapperLocations" value="classpath:mybatis/order/read/*.xml"/>
        <property name="plugins">
            <array>
            </array>
        </property>
    </bean>
    <bean id="userReadMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dooool.OrderServer.dao.read"/>
        <property name="sqlSessionFactoryBeanName" value="userReadSqlSessionFactory"/>
    </bean>




    <!-- user database write-->
    <bean id="userDataSoureWrite" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton"
          parent="basePropertys">
        <property name="url"
                  value="${jdbc.house.url.write}"/>
        <property name="username" value="${jdbc.house.username}"/>
        <property name="password" value="${jdbc.house.password}"/>
    </bean>




    <bean id="userWriteSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="userDataSoureWrite"/>
        <property name="configLocation" value="classpath:mybatis/sqlmap-config.xml"/>
        <property name="mapperLocations" value="classpath:mybatis/order/write/*.xml"/>
        <property name="plugins">
            <array>
            </array>
        </property>
    </bean>
    <bean id="userWriteMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dooool.OrderServer.dao.write"/>
        <property name="sqlSessionFactoryBeanName" value="userWriteSqlSessionFactory"/>
    </bean>



    <!--&lt;!&ndash; 基于注解的声明式事务管理配置 &ndash;&gt;-->
    <!--<bean id="userTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="userDataSoureWrite"/>-->
        <!--&lt;!&ndash;<qualifier value="houseMybatisBackstage"/>&ndash;&gt;-->
    <!--</bean>-->
    <!--&lt;!&ndash; 注解方式配置事物 &ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="userTxManager"></tx:annotation-driven>-->

</beans>